pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--player

player = {
    init=function(self)
        self.x=64
        self.y=40
        self.offx=0
        self.offy=0
        self.width=7
        self.heigth=7
        self.spr=1
        self.grounded=false
        self.vecx=2
        self.vecy=10
        self.ground=true
        self.dusty=false

        self.dust_tab={}
        self.dust_time={}
    end,

    update=function(self, delta)
        if not(is_solid("full",self,0,1,0)) then 
            self.y+=self.vecy/5
            self.x+=self.vecx/5
        end
        if is_solid("down",self,0,1,0) and self.grounded==false then 
            self.grounded=true
            printh("Test")
        end
        if is_solid("up",self,0,1,0) and self.grounded==false then 
            self.grounded=true
            printh("Test")
        end
        if is_solid("down",self,0,1,0) and self.grounded==true then
            if (delta==1) then self.spr=2 end
            if (delta==30) then self.spr=1 end
            self.ground=true
        end
        if is_solid("up",self,0,1,0) and self.grounded==true then
            if (delta==1) then self.spr=1 end
            if (delta==30) then self.spr=3 end
            self.ground=false
        end
        if is_solid("left",self,1,0,1) or is_solid("right",self,1,0,1) then 
            self.vecx = -self.vecx
        end
    end,

    draw=function(self)
        spr(self.spr,self.x, self.y)
    end,

    go_fall=function(self,vecx,vecy)
        if (is_solid("down",self,0,1,0)) then
            self.y-=2
        end
        if (is_solid("up",self,0,1,0)) then
            self.y+=2
        end
        self.vecx=vecx-self.x
        self.vecy=vecy-self.y
        printh(self.vecx)
        printh(self.vecy)
        self.spr=1
        self.grounded=false
    end,

    draw_dust=function(side)
        if(self.dusty) then
            if (side=="up") then
            end
        end
    end,
}
-->8
--arrow

arrow ={
    init=function(self, playerx, playery)
        self.x=playerx
        self.y=playery
        self.basex=playerx
        self.basey=playery
        self.sprupl=35
        self.sprupr=37
        self.sprdownl=52
        self.sprdownr=53
        self.reverse=true
        self.angle=0
        self.speed=5
        self.basespeed=5
        self.radius=10
    end,

    update=function(self, delta, playerx, playery, side)
        self.basex=player.x
        self.basey=player.y
        self.angle+=self.speed
        if side==true then
            if(self.angle>160) then
                self.speed= -self.basespeed
            end
            if(self.angle<20) then
                self.speed= self.basespeed
            end
        else
            if(self.angle>340) then
                self.speed= -self.basespeed
            end
            if(self.angle<200) then
                self.speed= self.basespeed
            end
        end

        self.x=self.basex+self.radius*cos(self.angle/360)
        self.y=self.basey+self.radius*sin(self.angle/360)
    end,

    draw=function(self)
        spr(self.sprupl,self.x, self.y)
    end,

    get_x=function(self)
        return self.x
    end,

    get_y=function(self)
        return self.y
    end,
}


-->8
--Tool

-- is_solid(edge : the edge/side where check collisions
-- obj : the object (must have x, y, w, h, offx, offy)
-- ox : additional x offset
-- oy : additional y offset
-- flags : number / list of numbers that contains the flags
-- debug = if true draw red pixel on "collision-pixel" position)
function is_solid(edge,obj,offx,offy,flags,debug)
	local col_list={}
	offx_=offx
	offy_=offy
	flags_=flags or {0}
	if(type(flags_)!="table") flags_={flags}
	local ix=obj.x+obj.offx+offx_ --the x collision pixel
	local iy=obj.y+obj.offy+offy_ --the y collision pixel
	for x=ix,ix+obj.width+7,8 do
		for y=iy,iy+obj.heigth+7,8 do
			if edge==nil
			or edge=="full"
			or (edge=="up" and y==iy)
			or (edge=="down" and y>=iy+obj.heigth)
			or (edge=="left" and x==ix)
			or (edge=="right" and x>=ix+obj.width)
			then
				add(col_list, {x=min(x,ix+obj.width), y=min(y,iy+obj.heigth)})
			end
		end
	end
	if(debug) print(#col_list)
	for c in all(col_list) do 
		if(debug) pset(c.x, c.y, 8)
		for v in all(flags_) do
			if(fget(mget(c.x/8, c.y/8),v)) return true
		end
	end
	return false
end
-->8
--main

delta=1

function _init()
    player:init()
    arrow:init(player.x, player.y)
end

function _update60()
    delta+=1
    if (delta>=61) delta=1
    player:update(delta)
    arrow:update(delta, player.x, player.y, player.ground)
    if (btnp(❎)) then
        player:go_fall(arrow:get_x(),arrow:get_y())
    end
end

function _draw()
    cls()
    map(0,0)
    if (player.x >= 64 and player.x <= 192) then camera(player.x-64, 0) end -- (30*8)-64=184
    player:draw()
    arrow:draw()
    --is_solid("full",player,0,0,{},true)
end



__gfx__
00000000bbbbbbbb00000000bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000b7b77b7bbbbbbbbbb7b77b7b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000777b770b7b77b7b0777b770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000071771700717b17007177170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000071771700717717007c77170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070007c7777007c77770c77c7c7c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000c77c7c7cc77c7c7ccccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000011111c1cccc1111100000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000001111c1ccccc1111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000111111cccc1c111100000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000001111c1cccc11111100000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000011111cccccc1111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000111111ccccc1111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000111111ccc11c111100000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000011111c1ccc11111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000bbbbbbbb111111110000000011111c1cccc1111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000bbbbbbbb11111111000000001111111cc111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000bbb4bb4b11111111000cc00011111cccc1c1111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000b4b4b44b1111111100c77c0011411cbccc11111100000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000044444b441111111100c77c00444444bbb4b4441400000000000000000000000000000000000000000000000000000000000000000000000000000000
000000004444b44411111111000cc00044444b4bbbb4444400000000000000000000000000000000000000000000000000000000000000000000000000000000
000000004444444411111111000000004444444bb444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000044444444111111110000000044444bbbb4b4444400000000000000000000000000000000000000000000000000000000000000000000000000000000
99999999444444441111111100000000444444bbb444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
999999994444444411111111000000004444444bbbb4444400000000000000000000000000000000000000000000000000000000000000000000000000000000
999999994444444411111111000000004444444bbbb4444400000000000000000000000000000000000000000000000000000000000000000000000000000000
9999999944444444111111110000000044444b4bbbbb444400000000000000000000000000000000000000000000000000000000000000000000000000000000
999999994444444411c1111100000000444444bbbb44444400000000000000000000000000000000000000000000000000000000000000000000000000000000
9999999944444444c11c1c1c000000004444444bbbb4444400000000000000000000000000000000000000000000000000000000000000000000000000000000
9999999944444444c1cc1ccc00000000444444bbbb44444400000000000000000000000000000000000000000000000000000000000000000000000000000000
9999999944444444cccccccc0000000044444bbbbbb4444400000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000020200000000000000000000000100000202000000000000000000000000010002020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2222222222222222222222222222222222222222222222222222222222222222000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2222222222222222222222222222222222222222222222222222222222222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2222222222222222222222222222222222222222222222222222222222222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323232323232323232323232323232323232323232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1430303030303030303030303030303030303030303030303030303030303015000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1430303030303030303030303030303030303030303030303030303030303015000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1430303030303030303030303030303030303030303030303030303030303015000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1430303030303030303030303030303030303030303030303030303030303015000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1430303030303030303030303030303030303030303030303030303030303025000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2430303030303030303030303030303030303030303030303030303030303035000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3430303030303030303030303030303030303030303030303030303030303035000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3430303030303030303030303030303030303030303030303030303030303035000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212121212121212121212121212121212121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131313131313131313131313131313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131313131313131313131313131313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131313131313131313131313131313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
