pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--player
player = {
    init=function(self)
        self.x=20
        self.y=40
        self.offx=1
        self.offy=1
        self.width=5
        self.heigth=6
        self.spr=1

        self.move_state=0
    end,

    update=function(self)
		local dx,dy=0,0
        printh(self.move_state)

        if self.move_state == 0 then
            if(btn(⬅️)) dx=-1
            if(btn(➡️)) dx+=1
            if(btn(⬆️)) dy=-1
            if(btn(⬇️)) dy+=1
        end

        if self.move_state == 1 then
            if(btn(⬆️)) dx=-1
            if(btn(⬇️)) dx+=1
            if(btn(➡️)) dy=-1
            if(btn(⬅️)) dy+=1
        end

        if self.move_state == 2 then
            if(btn(⬆️)) dx=-1
            if(btn(⬇️)) dx+=1
            if(btn(➡️)) dy=-1
            if(btn(⬅️)) dy+=1
        end

        if self.move_state == 3 then
            if(btn(⬇️)) dx=-1
            if(btn(⬆️)) dx+=1
            if(btn(⬅️)) dy=-1
            if(btn(➡️)) dy+=1
        end

        if not(is_solid("full",self,dx,0,{0,1,2,3,4})) then self.x+=dx end
        if not(is_solid("full",self,0,dy,{0,1,2,3,4})) then self.y+=dy end

        if (is_solid("left",self,dx,0,1)) then
            self.move_state=flr(rnd(4))
            self.x=7*8
            self.y=4*8
            if (coin.show == false) then
                coin.x = rnd((11*8)) + (2*8)
                coin.y = rnd((11*8)) + (3*8)
                coin.show=true
            end
        end
        if (is_solid("right",self,dx,0,2)) then
            self.move_state=flr(rnd(4))
            self.x=7*8
            self.y=13*8
            if (coin.show == false) then
                coin.x = rnd((11*8)) + (2*8)
                coin.y = rnd((11*8)) + (3*8)
                coin.show=true
            end
        end
        if (is_solid("up",self,0,dy,3)) then
            self.move_state=flr(rnd(4))
            self.x=7*8
            self.y=13*8
            if (coin.show == false) then
                coin.x = rnd((11*8)) + (2*8)
                coin.y = rnd((11*8)) + (3*8)
                coin.show=true
            end
        end
        if (is_solid("down",self,0,dy,4)) then
            self.move_state=flr(rnd(4))
            self.x=12*8
            self.y=10*8
            if (coin.show == false) then
                coin.x = rnd((11*8)) + (2*8)
                coin.y = rnd((11*8)) + (3*8)
                coin.show=true
            end
        end

    end,

    draw=function(self)
        spr(self.spr,self.x, self.y)
    end

}-->8
--coin

coin = {
    init=function(self)
        self.spr=2
        self.x=7*8
        self.y=8*8
        self.score=0
        self.show=true
        self.direction="right"
    end,

    update=function(self)
        if(self.show==false) then 
            self.x=500
            self.y=500
        end 
        if player.x+8 >= self.x and player.x <= self.x+8 and player.y+8 >= self.y and player.y <= self.y+8 then 
            self.score+=1
            self.show=false
        end
    end,

    draw=function(self)
        spr(self.spr,self.x, self.y)
    end
}
-->8
--Tool

-- is_solid(edge : the edge/side where check collisions
-- obj : the object (must have .x, .y, .width, .height, .offx, .offy)
-- ox : additional x offset
-- oy : additional y offset
-- flags : number / list of numbers that contains the flags
-- debug = if true draw red pixel on "collision-pixel" position)
function is_solid(edge,obj,offx,offy,flags,debug)
	local col_list={}
	offx_=offx
	offy_=offy
	flags_=flags or {0}
	if(type(flags_)!="table") flags_={flags}
	local ix=obj.x+obj.offx+offx_ --the x collision pixel
	local iy=obj.y+obj.offy+offy_ --the y collision pixel
	for x=ix,ix+obj.width+7,8 do
		for y=iy,iy+obj.heigth+7,8 do
			if edge==nil
			or edge=="full"
			or (edge=="up" and y==iy)
			or (edge=="down" and y>=iy+obj.heigth)
			or (edge=="left" and x==ix)
			or (edge=="right" and x>=ix+obj.width)
			then
				add(col_list, {x=min(x,ix+obj.width), y=min(y,iy+obj.heigth)})
			end
		end
	end
	if(debug) print(#col_list)
	for c in all(col_list) do 
		if(debug) pset(c.x, c.y, 8)
		for v in all(flags_) do
			if(fget(mget(c.x/8, c.y/8),v)) return true
		end
	end
	return false
end

-->8
--main
function _init()
    player:init()
    coin:init()
    game_stade=0
    time = 60
    delta = 0
end

function _update60()
    if game_stade==0 then
        delta+=1
        if (delta>=60) then 
            time -= 1
            delta=0
        end
        if (time<=0) then
            game_stade=1
        end
        player:update()
        coin:update()
    end
    if game_stade==1 then
        if(btn(❎)) _init()
    end
end

function _draw()
    
    cls()
    map(0,0)
    player:draw()
    --is_solid("full",player,0,0,{},true)
    camera(0, 8)
    print("score =", 8, 24, 6)
    print(coin.score, 38, 24, 9)
    print(time, 13*8, 15*8, 8)
    coin:draw()
    if(game_stade==1)then
        rectfill(4*8, 6*8, 12*8, 10*8, 0)
        print("your score is", 5*8, 7*8, 7)
        print(coin.score, 9*8, 8*8, 9)
        print("press ❎", 6*8, 9*8, 6)
    end
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000004444770000aa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000777117000a9970000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000077777700a9669a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000081818800a9669a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700081818800a9669a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000111111000a99a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001100110000aa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333666619995555559000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333336555555595555559000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333336555555515555551000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333a9a33333333336555555565555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333a333333333336555555565555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333b333333333336555555565555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333336555555565555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333666619936666663000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333666666399166663000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333ff3336555555655555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33bb33333444ff436555555655555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b333333344444436555555655555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333333333f5554436555555655555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333bb334ff44431555555155555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333b333344ff5f39555555955555556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333344455439555555999166663000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000800000000000000000000000000000000000000000000000000000000000000002100000000000000000000000000001080400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3130302121212132212121212130303100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3130212121212121212121212121303100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3121212030212121212121213021213100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3121212121212130212130212121213100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3121212121202121213020212121213100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3130302130213021212120212121303100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3121212121212121212130212130303100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3122212120212121302021212121213100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3121212130212121212121212121333100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3121212121212121213021212121213100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3121213021212121212121302121213100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3121212121203021302121203021213100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3130212121213021212121213030303100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3130302121212123212121212130303100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
